
--QUESTION THREE
			
/*Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination 
of film category for each corresponding rental duration category. The resulting table should have three columns:Category, Rental length category, Count*/


--SOLUTION

SELECT
  category_name,
  standard_quartile,
  COUNT(*) AS count_of_movies
FROM (SELECT
  f.title AS film_title,
  c.name AS category_name,
  f.rental_duration,
  NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film AS f
JOIN film_category AS fc
  ON f.film_id = fc.film_id
JOIN category AS c
  ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')) t1
GROUP BY 1,
         2
ORDER BY 1, 2;






--QUESTION FOUR
			
/*We want to find out how the two stores compare in their count of rental orders during every month for all the years we have data for. Write a query that
 returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include
a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.*/


--SOLUTION

SELECT
  DATE_PART('month', r.rental_date) AS month,
  DATE_PART('year', r.rental_date) AS year,
  s2.store_id AS id_of_store,
  COUNT(*) AS rental_count
FROM rental r
JOIN staff s1
  ON s1.staff_id = r.staff_id
JOIN store s2
  ON s2.store_id = s1.store_id
GROUP BY 1,
         2,
         3
ORDER BY 4 DESC;




--QUESTION FIVE

/*We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of the
monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10
paying customers?*/


--SOLUTION

WITH table1 AS (SELECT customer_id, SUM(amount) AS total_amount_paid
			  FROM payment
			  GROUP BY 1
			  ORDER BY 2 DESC
			  LIMIT 10)

SELECT
  DATE_TRUNC('month', p.payment_date) AS pay_month,
  CONCAT(c.first_name, ' ', c.last_name) AS fullname,
  COUNT(*) AS paycount_permonth,
  SUM(p.amount) AS pay_amount
FROM payment p
JOIN customer c
  ON c.customer_id = p.customer_id
WHERE p.customer_id IN (SELECT
  customer_id
FROM table1)
GROUP BY 1,
         2
ORDER BY 2;





--QUESTION SIX

/*Finally, for each of these top 10 paying customers, I would like to find out the difference across their monthly payments during 2007. Please go ahead and
write a query to compare the payment amounts in each successive month. Repeat this for each of these 10 paying customers. Also, it will be tremendously helpful
if you can identify the customer name who paid the most difference in terms of payments.*/


--SOLUTION

WITH table1 AS (
	SELECT customer_id, SUM(amount) AS total_amt_paid
	  FROM payment
    GROUP BY 1
    ORDER BY 2 DESC
	LIMIT 10
),

table2 AS (
	SELECT DATE_TRUNC('month', p.payment_date) AS pay_month,
           CONCAT(c.first_name, ' ', c.last_name) AS fullname,
	       COUNT(*) AS paycount_permonth,
	       SUM(p.amount) AS pay_amount 
	  FROM payment p
	  JOIN customer c
	    ON c.customer_id = p.customer_id
	 WHERE p.customer_id IN (
		SELECT customer_id
		  FROM table1)
	GROUP BY 1, 2
	ORDER BY 2
)

SELECT
  pay_month,
  fullname,
  pay_amount,
  pay_amount - (LAG(pay_amount, 1) OVER (ORDER BY fullname)) AS payment_difference
FROM table2
ORDER BY 4 DESC;





--QUESTION ONE

/*We want to understand more about the movies that families are watching. The following categories are considered family movies:
 Animation, Children, Classics, Comedy, Family and Music. Create a query that lists each movie, the film category it is classified in, and the 
 number of times it has been rented out.*/


--SOLUTION

SELECT
  f.title AS film_title,
  c.name AS category_name,
  COUNT(*) AS rental_count
FROM rental AS r
JOIN inventory AS i
  ON i.inventory_id = r.inventory_id
JOIN film AS f
  ON f.film_id = i.film_id
JOIN film_category AS fc
  ON fc.film_id = f.film_id
JOIN category AS c
  ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1,
         2
ORDER BY 2;
	